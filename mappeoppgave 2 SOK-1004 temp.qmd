---
title: “SOK-1004, høst 2022, Mappeoppgave 2”

author: “[163]”

format: pdf

echo: true

output: true

editor: visual
---

# Oppgave 1. Husholdningens tilpasning

## Oppgave 1a

```{r}
#Sys.setlocale(locale='no_NB.utf8')
rm(list = ls())

suppressPackageStartupMessages(library(tidyverse))


x <- seq(0, 10500, by = 1)


df <- data.frame(x)

axes_1 <- ggplot(df, aes(x))+
  labs(title="Husholdningens tilpasning", 
    x="Mat",
    y="Konsumgoder")+
  theme(axis.title = element_text(size = 20),
        plot.title = element_text(size = 20),
        panel.background = element_blank(), 
        axis.line = element_line(colour = "black"))+ 
  coord_fixed(ratio = 1)+ # lik skala for x og y aksen
  scale_x_continuous(limits = c(0, 10500), expand = c(0, 0))+
  scale_y_continuous(limits = c(0, 9000), expand = c(0, 0)) 




I_0 <- function(x) (4000^(5/3))/x^(2/3) # nyttenivå 4000
I_1 <- function(x) (4741^(5/3))/x^(2/3)
I_2 <- function(x) (5500^(5/3))/x^(2/3)

figur_1 <- axes_1 + 
  stat_function(df,
        fun=I_0,
        mapping = aes()
        ) +
  stat_function(df,
                fun=I_1,
                mapping = aes()
  ) +
  stat_function(df,
                fun=I_2,
                mapping = aes()
  )+
  annotate("text",x=10000,y=1900, label="I_0")+
  annotate("text",x=10000,y=2650, label="I_1")+
  annotate("text",x=10000,y=3500, label="I_2")

figur_1
```

1: indifferenskurvene heller nedover for at vi skal kunne si noe om og måle hvor mye konsumgoder og mat en person eller en husholdning vil kunne bruke på med sitt gitte budsjett. Om man velger og bruke 10000 på mat i en gitt periode vil den samme personen kun ha igjen 2500 til å bruke på andre konsumgoder, samme gjelder om en bruker mer på konsumgoder og derfor vil sitte igjen med mindre å bruke på mat.

2: kurven på linjene viser til at det er større nyttenivå langs X-axen, vi kan se at dersom vi legger en strek fra 5000 til vi treffer kurven og deretter bort til Y-aksen vil vi altid få større nytteverdid en om vi legger en stek fra tilsvarende verdi fra Y til X axen.

3: på alle de 3 forskjellige indifferenskurvene ser vi en annen nytte, vi går ut ifra at i alle tilfellene at vi bruker all budsjettet presentert, og derfor vil aldri kurvene krysse.

## Oppgave 1b

1:

#m = P1X1 + P2X2 = 8500 = 1\*X1 + 0.80\*X2

#Med denne likningen vil du kunne legge inn antall enheter av konsum til du når det budsjettet du har i en periode.

#2: Helningen på budsjettlinjen sier oss hvor mye en konsument er vilig til å gi opp av en gode for å få mer av en annen gode. Ved å gå fra hver akse får vi et svar på hvor mye vi har igjen å bruke av den andre goden.

Ved dette regnestykket kommer vi fram til helningen, -(1/0.80) = -1.25

## Oppgave 1c

```{r}
bud_1 <- function(x) 8500-0.8*x
figur_2 <- figur_1+
  stat_function(df,fun=bud_1, mapping = aes())+
annotate("text",x=8900,y=1000, label="bud_1")

figur_2
```

#1: Der hvor budjsettlinjen krysser I_1 vil det vise til hvor den opptimale tilpassningen er. Streken legges her for å kunne maksimere hvor mye nytte en får av at en gode viker for en annen, maksimere nytten av å kjøpe mindre mat må vi ofre 15 mat for å få 12 mer av konsumgoder.

2: 5100\*1 + 4250\*0,80 = 5100 + 3400 = 8500.

# Oppgave 2. Budsjettandeler og vekter i Konsumprisindeksen (KPI)

```{r}
#| echo: false
library(rjson)
library(httr)
library(gdata)
library(rjstat)
library(lubridate)

url <- "https://data.ssb.no/api/v0/no/table/03013/"

query <- '{
  "query": [
    {
      "code": "Konsumgrp",
      "selection": {
        "filter": "vs:CoiCop2016niva2",
        "values": [
          "01"
        ]
      }
    },
    {
      "code": "ContentsCode",
      "selection": {
        "filter": "item",
        "values": [
          "KpiVektMnd"
        ]
      }
    },
    {
      "code": "Tid",
      "selection": {
        "filter": "item",
        "values": [
          "1999M01",
          "1999M02",
          "1999M03",
          "1999M04",
          "1999M05",
          "1999M06",
          "1999M07",
          "1999M08",
          "1999M09",
          "1999M10",
          "1999M11",
          "1999M12",
          "2000M01",
          "2000M02",
          "2000M03",
          "2000M04",
          "2000M05",
          "2000M06",
          "2000M07",
          "2000M08",
          "2000M09",
          "2000M10",
          "2000M11",
          "2000M12",
          "2001M01",
          "2001M02",
          "2001M03",
          "2001M04",
          "2001M05",
          "2001M06",
          "2001M07",
          "2001M08",
          "2001M09",
          "2001M10",
          "2001M11",
          "2001M12",
          "2002M01",
          "2002M02",
          "2002M03",
          "2002M04",
          "2002M05",
          "2002M06",
          "2002M07",
          "2002M08",
          "2002M09",
          "2002M10",
          "2002M11",
          "2002M12",
          "2003M01",
          "2003M02",
          "2003M03",
          "2003M04",
          "2003M05",
          "2003M06",
          "2003M07",
          "2003M08",
          "2003M09",
          "2003M10",
          "2003M11",
          "2003M12",
          "2004M01",
          "2004M02",
          "2004M03",
          "2004M04",
          "2004M05",
          "2004M06",
          "2004M07",
          "2004M08",
          "2004M09",
          "2004M10",
          "2004M11",
          "2004M12",
          "2005M01",
          "2005M02",
          "2005M03",
          "2005M04",
          "2005M05",
          "2005M06",
          "2005M07",
          "2005M08",
          "2005M09",
          "2005M10",
          "2005M11",
          "2005M12",
          "2006M01",
          "2006M02",
          "2006M03",
          "2006M04",
          "2006M05",
          "2006M06",
          "2006M07",
          "2006M08",
          "2006M09",
          "2006M10",
          "2006M11",
          "2006M12",
          "2007M01",
          "2007M02",
          "2007M03",
          "2007M04",
          "2007M05",
          "2007M06",
          "2007M07",
          "2007M08",
          "2007M09",
          "2007M10",
          "2007M11",
          "2007M12",
          "2008M01",
          "2008M02",
          "2008M03",
          "2008M04",
          "2008M05",
          "2008M06",
          "2008M07",
          "2008M08",
          "2008M09",
          "2008M10",
          "2008M11",
          "2008M12",
          "2009M01",
          "2009M02",
          "2009M03",
          "2009M04",
          "2009M05",
          "2009M06",
          "2009M07",
          "2009M08",
          "2009M09",
          "2009M10",
          "2009M11",
          "2009M12",
          "2010M01",
          "2010M02",
          "2010M03",
          "2010M04",
          "2010M05",
          "2010M06",
          "2010M07",
          "2010M08",
          "2010M09",
          "2010M10",
          "2010M11",
          "2010M12",
          "2011M01",
          "2011M02",
          "2011M03",
          "2011M04",
          "2011M05",
          "2011M06",
          "2011M07",
          "2011M08",
          "2011M09",
          "2011M10",
          "2011M11",
          "2011M12",
          "2012M01",
          "2012M02",
          "2012M03",
          "2012M04",
          "2012M05",
          "2012M06",
          "2012M07",
          "2012M08",
          "2012M09",
          "2012M10",
          "2012M11",
          "2012M12",
          "2013M01",
          "2013M02",
          "2013M03",
          "2013M04",
          "2013M05",
          "2013M06",
          "2013M07",
          "2013M08",
          "2013M09",
          "2013M10",
          "2013M11",
          "2013M12",
          "2014M01",
          "2014M02",
          "2014M03",
          "2014M04",
          "2014M05",
          "2014M06",
          "2014M07",
          "2014M08",
          "2014M09",
          "2014M10",
          "2014M11",
          "2014M12",
          "2015M01",
          "2015M02",
          "2015M03",
          "2015M04",
          "2015M05",
          "2015M06",
          "2015M07",
          "2015M08",
          "2015M09",
          "2015M10",
          "2015M11",
          "2015M12",
          "2016M01",
          "2016M02",
          "2016M03",
          "2016M04",
          "2016M05",
          "2016M06",
          "2016M07",
          "2016M08",
          "2016M09",
          "2016M10",
          "2016M11",
          "2016M12",
          "2017M01",
          "2017M02",
          "2017M03",
          "2017M04",
          "2017M05",
          "2017M06",
          "2017M07",
          "2017M08",
          "2017M09",
          "2017M10",
          "2017M11",
          "2017M12",
          "2018M01",
          "2018M02",
          "2018M03",
          "2018M04",
          "2018M05",
          "2018M06",
          "2018M07",
          "2018M08",
          "2018M09",
          "2018M10",
          "2018M11",
          "2018M12",
          "2019M01",
          "2019M02",
          "2019M03",
          "2019M04",
          "2019M05",
          "2019M06",
          "2019M07",
          "2019M08",
          "2019M09",
          "2019M10",
          "2019M11",
          "2019M12",
          "2020M01",
          "2020M02",
          "2020M03",
          "2020M04",
          "2020M05",
          "2020M06",
          "2020M07",
          "2020M08",
          "2020M09",
          "2020M10",
          "2020M11",
          "2020M12",
          "2021M01",
          "2021M02",
          "2021M03",
          "2021M04",
          "2021M05",
          "2021M06",
          "2021M07",
          "2021M08",
          "2021M09",
          "2021M10",
          "2021M11",
          "2021M12",
          "2022M01",
          "2022M02",
          "2022M03",
          "2022M04",
          "2022M05",
          "2022M06",
          "2022M07",
          "2022M08",
          "2022M09"
        ]
      }
    }
  ],
  "response": {
    "format": "json-stat2"
  }
}'

hent_indeks.tmp <- url %>%
  POST(body = query, encode = "json")

df_1 <-  hent_indeks.tmp %>%
  content("text") %>%
  fromJSONstat() %>%
  as_tibble()

df_1 <- df_1 %>%
separate(måned, 
         into=c("år", "måned"), 
         sep="M") %>%
mutate(dato = ymd(paste(år, måned, "1"))) %>%
  subset(select = -c(år, måned))
```

```{r}
df_1 %>%
  ggplot((aes(x=dato, y=value))) +
  geom_line() +
labs(x = 'år',
       y = 'verdi',
       title = 'KPI vekter på Matvarer og alkohlfrie drikkervarer over tid',
       subtitle = ' ') +
    scale_color_discrete(name = ' ',
                         labels = c(' ', ' ')) +
  theme(legend.position = 'bottom',
  panel.grid.major = element_line(color = 'grey', size = 0.1),
  panel.border = element_rect(color = 'grey', fill=NA, size = 0.2)) +
  theme(axis.text.x=element_text(size = 10))+
  
    theme_bw()

#vi kan observere en KPI som starter høyt og raser nedover de første årene, den går gradvis nedover fram til 2011 hvor den raser opp.
```

```{r}
#først lager vi en ny kolonne og trekker fra tallene definerer dato og setter de inn i den nye.

df_1$år = substr(df_1$dato, 1, nchar(df_1$dato)-1)

#vi gupperer så etter år og summerer alle tallene i disse.

df_1 <- df_1 %>%
group_by(år) %>%
summarise(across(c('value','dato'), mean, na.rm=TRUE))

df_1 <- df_1  %>%
  filter(år >= "2000", år <= "2011") %>%
  mutate(value =  value / 10) %>%
  rename(value2 = value)

df_1 <- subset(df_1, select = -(dato))
df_1 <- subset(df_1, select = -(år))

```

```{r}
#| echo: false
url <- "https://data.ssb.no/api/v0/no/table/10235/"

query <- '{
  "query": [
    {
      "code": "Forbruksundersok",
      "selection": {
        "filter": "vs:ForbrukHushold2",
        "values": [
          "FB2_01"
        ]
      }
    },
    {
      "code": "ContentsCode",
      "selection": {
        "filter": "item",
        "values": [
          "AndForbrUtg"
        ]
      }
    }
  ],
  "response": {
    "format": "json-stat2"
  }
}'

hent_indeks.tmp <- url %>%
  POST(body = query, encode = "json")

df_2 <-  hent_indeks.tmp %>%
  content("text") %>%
  fromJSONstat() %>%
  as_tibble()

df_3 <- df_2 %>%
  cbind(df_1)


```

```{r}
df_3 %>%
ggplot(aes(x=år,y=value, group = 1)) +
  geom_line() +
  geom_line(mapping = aes(x=år, y=value, color = statistikkvariabel)) +
  geom_line(mapping = aes(x= , y=value2, color = 'vare- og tjenestegruppe')) +
    labs(x = 'år',
       y = 'verdi i %',
       title = 'Budsjettandeler og vekter i konsumprisindeks',
       subtitle = ' ') +
    scale_color_discrete(name = ' ',
                         labels = c('konsumprisindeks', 'Forbruksutgift')) +
  theme(legend.position = 'bottom',
  panel.grid.major = element_line(color = 'grey', size = 0.1),
  panel.border = element_rect(color = 'grey', fill=NA, size = 0.2)) +
  theme(axis.text.x=element_text(size = 10))+
  
    theme_bw()
```

#1: Figuren viser prosentverdien til både konsumprisindeks og fobruksundersøkelsen, i årene 1999-2012.

#2: Som foreslått i "nytt om konsumprisindeksen" så er det forsjell i hovrdan de presenterte verdiene måles, den ene måler nordmenns konsum, i Noge og i utlandet, mens den andre måler konsumet til både nordemenn og utlendinger i Norge, derav forskjellene. Boligeiernes konsum er heller ikke tatt med i forbruksutgift

#3: Siden 2011 har det blitt flere verdier inkludert i KPI, i vektene er det blitt inkludert husholdningens konsumutgifter knyttet til livsforsikring. I tillegg er det siden 2011 inkludert Financial intermediate services inderectly measured, eller FISIM. Utviklingen av flere målinger vil ha en klar innvirking på verdiene som blir målt.

# Oppgave 3.

## Oppgave 3a

```{r}
axes_1 <- ggplot(df, aes(x))+
  labs(title="Husholdningens tilpasning", 
    x="Mat",
    y="Konsumgoder")+
  theme(axis.title = element_text(size = 20),
        plot.title = element_text(size = 20),
        panel.background = element_blank(), 
        axis.line = element_line(colour = "black"))+ 
  coord_fixed(ratio = 1)+ # lik skala for x og y aksen
  scale_x_continuous(limits = c(0, 10500), expand = c(0, 0))+
  scale_y_continuous(limits = c(0, 9000), expand = c(0, 0)) 

I_1 <- function(x) (4741^(5/3))/x^(2/3)
I_2 <- function(x) (4615^(5/3))/x^(2/3)
bud_1 <- function(x) 8500-0.8*x
bud_2 <- function(x) 8500-0.85*x

figur_3 <- axes_1 + 
  stat_function(df,
                fun=I_1,
                mapping = aes()
  ) +
  stat_function(df,
                fun=I_2,
                mapping = aes()
            
  )+
  annotate("text",x=10000,y=3500, label="I_1")+
  annotate("text",x=10000,y=2600, label="I_2")+
  stat_function(df,fun=bud_1, mapping = aes())+
  stat_function(df,fun=bud_2, mapping = aes())+
  annotate("text",x=10000,y=1000, label="bud_1")+
  annotate("text",x=8000,y=1000, label="bud_2")



figur_3
#l_1 er den originale mens l_2 er den modifiserte, samme går for bud_1 og bud_2.
```

## Oppgave 3b

#1: Vis i figuren hvordan den totale nedgangen i husholdningens konsum av mat kan dekomponeres i en inntekts- og substitusjonseffekt.

#Vi har i figuren vist en husholdnings tilpasning når 1 enhet mat går fra å koste 0,80 til å koste 0,85, denne husholdningen må nå bruke mer penger for å kunne få råd til å kjøpe like mye mat, dette vil selvfølgelig gå utover den andre goden å husholdningen må tilpasse seg dette med å konsumere mindre av en av dem.

```{r}
axes_1 <- ggplot(df, aes(x))+
  labs(title="Husholdningens tilpasning", 
    x="Mat",
    y="Konsumgoder")+
  theme(axis.title = element_text(size = 20),
        plot.title = element_text(size = 20),
        panel.background = element_blank(), # hvit bakgrunn
        axis.line = element_line(colour = "black"))+ # sett inn akselinjer
  coord_fixed(ratio = 1)+ # lik skala for x og y aksen
  scale_x_continuous(limits = c(0, 10500), expand = c(0, 0))+
  scale_y_continuous(limits = c(0, 9000), expand = c(0, 0)) # begrense aksene


I_1 <- function(x) (4741^(5/3))/x^(2/3)
I_2 <- function(x) (4615^(5/3))/x^(2/3)
bud_1 <- function(x) 8500-0.85*x
bud_2 <- function(x)9052.5-0.85*x

figur_4 <- axes_1 + 
  stat_function(df,
                fun=I_1,
                mapping = aes()
  ) +
  stat_function(df,
                fun=I_2,
                mapping = aes()
            
  )+
  annotate("text",x=10000,y=3500, label="I_1")+
  annotate("text",x=10000,y=2600, label="I_2")+
  stat_function(df,fun=bud_1, mapping = aes())+
  stat_function(df,fun=bud_2, mapping = aes())+
  annotate("text",x=10000,y=1000, label="bud_1")+
  annotate("text",x=8000,y=1000, label="bud_2")



figur_3
```

#2:Myndighetene vurderer å kompensere husholdningen for prisøkningen på matvarer. Vis i figuren hvor mye inntekt husholdningen bør få tilført for å få det like bra som før prisøkningen. (Hint: ettersom prisen på konsumgoder er 1 kan dette beløpet vises i figuren som en vertikal avstand, dvs x konsumgoder koster x kr).

#For at levestandarden skal bli den samme før prisøkningen må denne husholdningen få et tilskudd på 552,5. Dette finner vi ut på denne måten 1\*0.85\*10650 = 9052,5-8500 = 552,5.

#3: I Case 3 har dere sett hvordan KPI beregnes, og dette er også diskutert i [Johannessen](https://www.ssb.no/priser-og-prisindekser/artikler-og-publikasjoner/_attachment/203142?_ts=1495b28c170) (2014) (avsnitt som heter "Et teoretisk utgangspunkt") og [Langer og Johannessen](https://www.ssb.no/a/publikasjoner/pdf/oa_201004/johannessen.pdf) (2010) side 41. Man legger til grunn en versjon av en Laspeyres indeks. Beskriv med ord hvordan en Laspeyres indeks settes sammen. Vis i din figur fra 3b(ii) hvor mye inntekt husholdningen ville få fra myndighetene om denne metoden legges til grunn. Hva antas om substitusjonseffekten her?

#Laspereysindeksen går ut på at vi sammenligner prisendringer i tid, ved å dele en nåverende periodes priser på en tidligere periodes priser vil vi komme fram til et tall som sier oss noe om hvor høy prisendringene er. Eksempel med tall fra oppgaven 9052,5/8500\*100=106,5. 8500\*1,065 = 9052,5. I dette tilfellet vil ikke denne indeksen produsere et annet resultat,

4: "Siktemålet med konsumprisindeksen (KPI) er å lage en levekostnadsindeks som skal gi svar på hvilken inntektskompensasjon som er nødvendig for at en gjennomsnittlig husholdning skal kunne opprettholde sin levestandard når prisen på varer og tjenester endres" ([Johannessen](https://www.ssb.no/priser-og-prisindekser/artikler-og-publikasjoner/_attachment/203142?_ts=1495b28c170), 2014; 13). Basert på dine svar til (ii) og (iii) hvor bra fungerer KPI som levekostnadsindeks?

\# KPI er nyttig for å kunne måle den totale kjøpekraften til befolkningen til et land, den vil ikke inkludere alle som oppholder seg i det gitte landet da som nevnt tidligere ikke inkluderer de som har et annet statsborgerskap.
